#!/usr/bin/env python3
import rospy
from std_msgs.msg import Float64MultiArray
from sensor_msgs.msg import JointState
from custom_ros_tools.ros_comm import ToggleService
from custom_ros_tools.robot import resolve_joint_order

class Node:

    def __init__(self):
        rospy.init_node('remap_joint_state_to_floatarray_node')
        config = rospy.get_param('~config')
        self.joint_names = config['joint_names']
        self.field = config.get('field', 'position')
        self.sub = None
        self.pub = rospy.Publisher('joint_states/floatarray', Float64MultiArray, queue_size=10)
        ToggleService('remap_joint_state_to_floatarray/toggle', self.start, self.stop)

    def start(self):
        if self.sub is None:
            self.sub = rospy.Subscriber('joint_states', JointState, self.callback)
            return True, "started remapper"
        else:
            return False, "tried to start remapper but it is already running"

    def stop(self):
        if self.sub is not None:
            self.sub.unregister()
            self.sub = None
            return True, "stopped remapper"
        else:
            return False, "tried to stop remapper but it is not running"

    def callback(self, msg):
        self.pub.publish(Float64MultiArray(data=getattr(resolve_joint_order(msg), self.field)))

    def spin(self):
        rospy.spin()

def main():
    Node().spin()

if __name__ == "__main__":
    main()
